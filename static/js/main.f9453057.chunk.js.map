{"version":3,"sources":["api/plants.js","api/users.js","history.js","actions/index.js","components/Logout.js","components/Header.js","components/plantFolder/PlantForm.js","components/plantFolder/EditPlant.js","components/plantFolder/GetPlants.js","components/plantFolder/AddPlant.js","components/Dashboard.js","components/LoginForm.js","components/Login.js","components/RegisterForm.js","components/Register.js","components/Landing.js","components/App.js","reducers/index.js","reducers/plantReducer.js","reducers/userReducer.js","reducers/loginErrorReducer.js","index.js"],"names":["axios","create","baseURL","process","createBrowserHistory","editPlant","id","formValues","token","_ref5","Object","asyncToGenerator","regenerator_default","a","mark","_callee5","dispatch","headers","response","wrap","_context5","prev","next","Authorization","concat","plants","patch","sent","type","payload","data","history","push","stop","_x6","apply","this","arguments","Logout","logout","_this","props","logoutUser","user","undefined","renderLogout","react_default","createElement","Card_default","className","onClick","hideLogOutModal","React","Component","connect","state","users","_ref8","_callee8","_context8","post","_x9","Header","logOutModal","showLogOutModal","setState","renderButton","Navbar_default","Toggle","Collapse","Modal_default","show","components_Logout","momentLocalizer","moment","renderDateTimePicker","_ref","_ref$input","input","onChange","value","showTime","DateTimePicker_default","format","time","Date","renderDropdownList","_ref2","valueField","textField","DropdownList_default","assign","renderCustomForm","_ref3","placeholder","_ref3$meta","meta","touched","error","sunType","reduxForm","form","validate","values","errors","name","length","water","isNaN","Number","lastwater","Title","Body","onSubmit","handleSubmit","Field","component","Button_default","variant","hideModal","EditPlant","plantID","hideEditModal","getPlant","plantFolder_PlantForm","initialValues","_","pick","plant","ownProps","_callee3","_context3","get","_x4","GetPlants","editModal","months","showEditModal","deletePlantHelper","deletePlant","getNextDate","nextDay","setDate","getDate","parseInt","day","month","getMonth","toString","formatLastWater","lastDay","changeLastWatered","todayObject","_id","renderPlants","map","Col_default","md","lg","key","index_esm","sun","bind","assertThisInitialized","plantFolder_EditPlant","getPlants","Container_default","Row_default","noGutters","_callee2","_context2","_x3","_ref4","_callee4","_context4","delete","_x5","AddPlant","createPlant","newPlant","_callee","getState","_context","t0","Error","_x","_x2","Dashboard","toggleModal","showModal","renderWelcome","plantFolder_AddPlant","plantFolder_GetPlants","_ref$meta","email","test","password","renderError","Login","loginUser","components_LoginForm","_ref7","_callee7","_context7","console","log","_x8","Register","newUser","components_RegisterForm","_ref6","_callee6","_context6","_x7","Landing","CardGroup_default","react_router_dom","to","App","react_router","path","exact","combineReducers","formReducer","action","objectSpread","mapKeys","defineProperty","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.f9453057.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n})","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n})","\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import plants from '../api/plants';\nimport users from '../api/users';\nimport history from '../history';\n\n\nexport const createPlant = (formValues, token, hideModal) => {\n    return async (dispatch, getState) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        \n        try{\n        const response = await plants.post('/plant', formValues, {headers});\n        dispatch({ type: 'CREATE_PLANT', payload: response.data});\n        hideModal()\n\n        }catch(e){\n            throw new Error(e.response);\n            \n        }\n    };\n};\n\nexport const getPlants = (token) => {\n    return async (dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.get('/plant', {headers});\n        dispatch({ type: 'GET_PLANTS', payload: response.data})\n    }\n}\n\nexport const getPlant = (id, token) => {\n    return async (dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.get(`/plant/${id}`, {headers});\n        dispatch({ type: 'GET_PLANT', payload: response.data})\n    }\n}\n\nexport const deletePlant = (id, token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.delete(`/plant/${id}`, {headers});\n        dispatch({ type: 'DELETE_PLANT', payload: response.data._id});\n        \n    }\n}\n\nexport const editPlant = (id, formValues, token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.patch(`/plant/${id}`, formValues,{headers});\n        dispatch({ type: 'EDIT_PLANT', payload: response.data});\n        history.push('/dashboard');\n    }\n}\n\nexport const newUser = (formValues) =>{\n    return async(dispatch) =>{\n        const response = await users.post('/users', formValues);\n        dispatch({ type: 'NEW_USER', payload: response.data});\n        history.push('/dashboard');\n    }\n}\n\nexport const loginUser = (formValues) =>{\n    return async(dispatch) =>{\n        try{\n        const response = await users.post('/users/login', formValues);\n        dispatch({ type: 'LOGIN_USER', payload: response.data});\n        history.push('/dashboard');\n        }catch(e){\n            console.log(e.response.data.error)\n            dispatch({ type: 'LOGIN_ERROR', payload: e.response.data.error});\n        }\n    }\n}\n\nexport const logoutUser = (token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await users.post('/users/logout',null, {headers})\n        dispatch ({ type: 'LOGOUT_USER', payload: response.data});\n        history.push('/');\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions';\nimport Card from 'react-bootstrap/Card';\nimport history from '../history';\n\nclass Logout extends React.Component{\n    \n    logout = () =>{\n            this.props.logoutUser(this.props.user.undefined.token)\n            history.push('/')\n    }\n    \n\n    renderLogout = () => {\n        return (\n        <Card className='loginCard'>\n        <h1 className='cardTitle'>Are you sure you want to logout?</h1>\n        <div className='loginFormButtonContainer'>\n            <button className='loginFormButtons' onClick={this.logout}>Logout</button>\n            <button className='loginFormButtons' onClick={()=>this.props.hideLogOutModal()}>Cancel</button>\n            \n        </div>\n    </Card>    \n        )\n    }\n\n    render(){\n        return(\n            <div>\n                {this.renderLogout()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps, { logoutUser })(Logout)","import React from 'react'\nimport { connect } from 'react-redux';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Modal from 'react-bootstrap/Modal';\nimport Logout from './Logout';\nclass Header extends React.Component{\n    \n    state ={\n        logOutModal : false\n    }\n    \n    showLogOutModal = () =>{\n        this.setState({\n            logOutModal : true\n        })\n    }\n\n    hideLogOutModal = () =>{\n        this.setState({\n            logOutModal : false\n        })\n    }\n\n    renderButton = () =>{\n        return(\n            <div>\n                <button className='navBarLogout' onClick={this.showLogOutModal}>Logout</button>\n            </div>        \n        )\n    }\n\n    render(){\n        return(\n            <div>\n                <Navbar className='navBar'>\n                    <Navbar.Toggle />\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        {this.renderButton()}          \n                    </Navbar.Collapse>\n                </Navbar>\n\n                <Modal show={this.state.logOutModal}>\n                    <Logout hideLogOutModal={this.hideLogOutModal} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        user:state.users\n    }\n}\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button';\n\nimport moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport DropdownList from 'react-widgets/lib/DropdownList';\n\nimport 'react-widgets/dist/css/react-widgets.css'\n\nmomentLocalizer(moment)\n\nconst renderDateTimePicker = ({ input: { onChange,value }, showTime}) =>\n<DateTimePicker\n    onChange={onChange}\n    format='DD MM YYYY'\n    time={showTime}\n    value={!value ? null : new Date(value)}\n/>\n\nconst renderDropdownList = ({input, data, valueField, textField }) => \n<DropdownList {...input}\n    data={data}\n    onChange={input.onChange} />\n\nconst renderCustomForm = ({input, type, placeholder, meta:{touched, error}})=>{\n    return(\n        <div>\n            <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n            {touched && (error && <span>{error}</span>)}\n        </div>\n    )\n }\n\n\n const validate = values => {\n    const errors = {}\n    if (!values.name) {\n      errors.name = <p className='loginFieldError'>Name Required</p>\n    } else if (values.name.length > 15) {\n      errors.name = <p className='loginFieldError'>Must be 15 characters or less</p>\n    }\n    if (!values.water) {\n        errors.water = <p className='loginFieldError'>Number of days required</p>\n      } else if (isNaN(Number(values.water))) {\n        errors.water = <p className='loginFieldError'>Must be a number</p>\n      } \n    if (!values.lastwater) {\n      errors.lastwater = <p className='loginFieldError'>Date Required</p>\n    }\n    return errors\n  }\n\n\nconst sunType = [\n    'Likes low light',\n    'Likes filtered light',\n    'Likes direct light'\n]\n\n\n\nconst PlantForm = (props) => {\n\n    const onSubmit = (formValues) =>{props.onSubmit(formValues)}\n\n        return(\n            <Card className='loginCard'>\n            <Card.Title className='cardTitle'>Plant Form</Card.Title>\n            <Card.Body>\n            <form onSubmit={props.handleSubmit(onSubmit)}>\n                <div>\n                    <label>Name of Plant:</label>\n                    <Field\n                        name='name'\n                        component={renderCustomForm}\n                        type='text'\n                        placeholder=\"'Pothos Neon'\"\n                        \n                    />\n                </div>\n    \n                <div>\n                <label>Type of Light:</label>\n                <Field  \n                    name='sun'\n                    component={renderDropdownList}\n                    data={sunType}\n                    placeholder=\"'Likes direct sunlight'\"\n                />\n                </div>\n                <div>\n                <label>How many days between watering:</label>\n                <Field  \n                    name='water'\n                    component={renderCustomForm}\n                    type='text'\n                    placeholder=\"'8'\"\n                   \n                />\n                </div>\n                <div>\n                <label>Last time plant was watered:</label>\n                    <Field \n                        name='lastwater'\n                        showTime={false}\n                        component={renderDateTimePicker}\n                    />\n                </div>\n\n                <div className='plantFormButtons'>\n                    <Button onClick={props.handleSubmit(props.onSubmit)} variant='primary'>Submit</Button>\n                    <Button variant='danger' onClick={()=>props.hideModal()}>Cancel</Button>\n                </div>\n            </form>\n            </Card.Body>\n            </Card> \n        );\n    \n}\n\nexport default reduxForm({\n    form: 'plantForm',\n    validate\n})(PlantForm);","import React from 'react';\n\nimport PlantForm from './PlantForm';\n\nimport { connect } from 'react-redux';\nimport { editPlant, getPlant } from '../../actions';\n\nimport _ from 'lodash';\n\n\nclass EditPlant extends React.Component{\n    componentDidMount(){\n        this.props.getPlant(this.props.plantID,this.props.user.undefined.token)\n    }\n    onSubmit=(formValues)=>{\n        this.props.editPlant(this.props.plantID,formValues,this.props.user.undefined.token)\n        this.props.hideEditModal()\n    }\n    \n    render(){\n        return(\n            <div>\n                <PlantForm \n                    initialValues={_.pick(this.props.plant, 'name','sun', 'water', 'lastwater')}\n                    onSubmit={this.onSubmit}\n                    hideModal={this.props.hideEditModal}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    return{\n        plant: state.plants[ownProps.plantID],\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps,{ editPlant, getPlant})(EditPlant);","import React from 'react';\nimport { getPlants, deletePlant } from '../../actions/';\nimport { connect } from 'react-redux';\n\nimport EditPlant from './EditPlant';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\nimport { editPlant } from '../../actions';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport { FiSun, FiClock, FiCloudDrizzle } from 'react-icons/fi';\n\nclass GetPlants extends React.Component{\n\n    state ={\n        editModal: null,\n        months: [\"January\", \n                \"February\", \n                \"March\", \n                \"April\", \n                \"May\", \n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"]\n    }\n\n    showEditModal = (id) => {\n        this.setState({\n            editModal: id\n        })\n    }\n\n    hideEditModal = () => {\n        this.setState({\n            editModal: null\n        })\n    }\n\n    componentDidMount(){\n        this.props.getPlants(this.props.user.undefined.token)\n    }\n\n    deletePlantHelper=(id)=>{\n        this.props.deletePlant(id)\n    }\n\n  \n\n    getNextDate = (plant) => {\n        \n        var nextDay = new Date(plant.lastwater);\n        nextDay.setDate(nextDay.getDate() + parseInt(plant.water));\n\n        var day = nextDay.getDate();\n\n        var month = nextDay.getMonth();\n\n        return this.state.months[month]  + ' ' + day.toString();\n        \n    }   \n\n    formatLastWater = (plant) => {\n        var lastDay = new Date(plant.lastwater);\n        var day = lastDay.getDate();\n        var month = lastDay.getMonth();\n        return this.state.months[month] + ' ' + day.toString();\n    }\n\n    changeLastWatered = (plant) => {\n        var today = new Date()\n        var todayObject = {\n            'lastwater': today\n        }\n        this.props.editPlant(plant._id,todayObject,this.props.user.undefined.token)\n    }\n\n\n    renderPlants = () =>{\n        return (\n            this.props.plants.map((plant)=>\n                <Col md={6} lg={4} className='getPlantIndividual' key={plant._id}>\n                    <Card \n                        className='getPlantsCards'  \n                    >\n                        <Card.Header className='plantCardHeader'>\n                            <p className='plantCardHeaderTop'>{plant.name}</p>\n                            <p className='plantCardHeaderDays'>Next watering date:</p>\n                            <p className='plantCardHeaderBottom'>{this.getNextDate(plant)}</p>\n                            <button \n                                className='cardWaterButton'\n                                onClick={()=>this.changeLastWatered(plant)}>WATER</button>\n                        </Card.Header>\n                        <Card.Body className='plantCardBody'>\n                           \n                                <div className='cardIcons'>\n                                    <div><FiSun /></div>\n                                    <div><FiCloudDrizzle /></div>\n                                    <div><FiClock /></div>\n                                </div>\n                                <div className='cardDetails'>\n                                    <p>{plant.sun}</p>\n                                    <p>Water every {plant.water} days</p>\n                                    <p>Last watered: {this.formatLastWater(plant)} </p>\n                                </div>\n                          \n                        </Card.Body>\n                        <div className='plantCardButtonContainer'>\n                            <button className='plantCardButton' \n                                onClick={this.props.deletePlant.bind(this, plant._id, this.props.user.undefined.token)}   \n                                >Delete\n                            </button>\n\n                            <button className='plantCardButton'\n                                onClick={()=>this.showEditModal(plant._id)}\n                                >Edit\n                            </button>\n                            \n\n                            <Modal show={this.state.editModal === plant._id} >  \n                                <EditPlant plantID={plant._id} hideEditModal={this.hideEditModal}  />\n                            </Modal>\n                        </div>   \n                    </Card>\n                </Col>\n            )\n        )\n    }\n\n\n    \n    render(){\n        return(\n            <Container>\n            <Row className='getPlantsGroup' noGutters={true}>             \n                {this.renderPlants()}\n            </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        plants: Object.values(state.plants),\n        user: (state.users)\n    }\n}\n\nexport default connect(mapStateToProps,{ getPlants, deletePlant, editPlant })(GetPlants);","import React from 'react';\n\nimport PlantForm from './PlantForm';\nimport { connect } from 'react-redux';\nimport { createPlant } from '../../actions';\n\nclass AddPlant extends React.Component{\n    \n    onSubmit=(formValues,props)=>{\n            this.props.createPlant(formValues,this.props.user.undefined.token,this.props.hideModal)\n \n    }\n    \n    render(){\n        return(\n            <div>\n                <PlantForm \n                onSubmit={this.onSubmit}\n                hideModal={this.props.hideModal}\n                 />\n            </div>\n        )\n    }\n}\n\n    const mapStateToProps = (state)=>{\n        return{\n            newPlant : (state.form),\n            user: (state.users)\n        }\n    }\n\nexport default connect(mapStateToProps,{createPlant})(AddPlant);","import React from 'react';\nimport GetPlants from './plantFolder/GetPlants'\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport AddPlant from './plantFolder/AddPlant';\n\nclass Dashboard extends React.Component{\n\n    state = {\n        toggleModal: false\n    }\n\n    showModal = () =>{\n        this.setState({\n            toggleModal: true\n        })\n    }\n\n    hideModal = () =>{\n        this.setState({\n            toggleModal: false\n        })\n    }\n\n\n    renderWelcome = () =>{\n        return(\n            <div className='helloDash'>\n                <p>Hello</p>\n                <p className='helloDashName'>{this.props.user.undefined.user.name}</p>\n            </div>\n        )\n    }\n    \n    renderButton = () => {\n        return(  \n            \n                <button onClick={this.showModal} className='plantFormLink addPlantButton'>\n                    <p className='addPlantText'>+</p>\n                </button>\n            \n         \n        ) \n    }\n\n    render(){\n        return(\n            <div className='dashboardBackground'>\n                <div>\n                    <div className='dashboardGroup'>\n                        {this.renderWelcome()}\n                        {this.renderButton()}\n                        <Modal show={this.state.toggleModal} >\n                            <AddPlant hideModal={this.hideModal} />\n                        </Modal>\n                        <div className='dashboardAccent'></div>\n                    </div>\n                    <GetPlants />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\n\nimport Card from 'react-bootstrap/Card'\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = <p className='loginFieldError'>Required</p>\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = <p className='loginFieldError'>Invalid email address</p>\n    }\n    if (!values.password) {\n      errors.password = <p className='loginFieldError'>Required</p>\n    } \n    return errors\n  }\n\nconst renderCustomForm = ({input, type, placeholder, meta: {touched, error}})=>{\n    return(\n        <div>\n            <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n            {touched && (error && <span>{error}</span>)}\n        </div>\n\n\n//         <div>\n//    <FormControl \n//          type={type}\n//          value={input.value}\n//          onChange={input.onChange}\n//          placeholder={placeholder}\n//          className='loginField'\n//      />{touched && (error && <span>{error}</span>)}\n//      </div>\n   \n    )\n }\n\n\nconst LoginForm = (props) => {\n\n\n        return(\n            \n            <Card className='loginCard'>\n            <Card.Title className='cardTitle'>Login</Card.Title>\n            <Card.Body>\n            <form >\n                <div>\n                   \n                    <Field\n                        name='email'\n                        component={renderCustomForm}\n                        type='text'\n                        placeholder='EMAIL'\n      \n                    />\n                </div>\n    \n                <div>\n                \n                <Field  \n                    name='password'\n                    component={renderCustomForm}\n                    type='password'\n                    placeholder='PASSWORD'\n                \n                   \n                />\n                </div>\n\n\n                {props.renderError()}\n                <div className='loginFormButtonContainer'>\n                    <button className='loginFormButtons' type='submit' onClick={props.handleSubmit(props.onSubmit)}>\n                        Login\n                    </button>\n                </div>\n     \n            </form>\n            </Card.Body>\n\n            </Card> \n        );\n    \n}\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm);","import React from 'react'\nimport LoginForm from './LoginForm';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions';\n\nclass Login extends React.Component{\n    \n    onSubmit = (formValues) =>{\n        return (\n            this.props.loginUser(formValues)\n        )\n    }\n    \n    renderError = () =>{\n        if(this.props.error.error){\n            return <p className='loginFieldError'>{this.props.error.error}</p>\n        }\n    }\n\n    render(){\n        return(\n            <div className='loginLandingPage'>\n                <LoginForm onSubmit={this.onSubmit} renderError={this.renderError}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        error: state.error\n    }\n}\n\nexport default connect(mapStateToProps, { loginUser })(Login);","import React from 'react';\nimport { Field, reduxForm  } from 'redux-form';\n\n\nimport Card from 'react-bootstrap/Card'\n\n\n\nconst validate = values => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = <p className='loginFieldError'>Email is Required</p>\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = <p className='loginFieldError'>Invalid email address</p>\n    }\n    if (!values.password) {\n      errors.password = <p className='loginFieldError'>Password is Required</p>\n    } \n    if (!values.name) {\n        errors.name = <p className='loginFieldError'>Name is Required</p>\n      } \n    return errors\n  }\n\nconst renderCustomForm = ({input, type, placeholder, meta:{touched, error}})=>{\n    return(\n        <div>\n        <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n        {touched && (error && <span>{error}</span>)}\n        </div>\n    )\n }\n\nconst RegisterForm = (props) => {\n\n\n        return(\n            <Card className='loginCard'>\n            <Card.Title className='cardTitle'>Sign Up</Card.Title>\n            <Card.Body>\n            <form >\n  \n            <div>\n                   \n                    <Field\n                        name='name'\n                        component={renderCustomForm}\n                        type='text'\n                        placeholder='NAME'\n                     \n                        \n                    />\n                </div>  \n\n                <div>\n                    \n                    <Field\n                        name='email'\n                        component={renderCustomForm}\n                        type='text'\n                        placeholder='EMAIL'\n                     \n                        \n                    />\n                </div>\n    \n                <div>\n               \n                <Field  \n                    name='password'\n                    component={renderCustomForm}\n                    type='text'\n                    placeholder='PASSWORD'\n                   \n                />\n                </div>\n                <div className='loginFormButtonContainer'>\n                    <button className='loginFormButtons plantFormButtons' onClick={props.handleSubmit(props.onSubmit)} variant='primary'>Sign Up</button>\n\n                </div>\n            </form>\n            </Card.Body>\n            </Card> \n        );\n    \n}\n\nexport default reduxForm({\n    form: 'registerForm',\n    validate\n})(RegisterForm);","import React from 'react';\nimport RegisterForm from './RegisterForm';\nimport { connect } from 'react-redux';\nimport { newUser } from '../actions';\n\nclass Register extends React.Component{\n    \n    onSubmit = (formValues) =>{\n        return(\n            this.props.newUser(formValues)\n        )\n    }\n    \n    render(){\n        return(\n            <div className='loginLandingPage'>\n                <RegisterForm onSubmit={this.onSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { newUser })(Register);","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport CardGroup from  'react-bootstrap/CardGroup';\n\nclass Landing extends React.Component{\n    render(){\n        return(\n            \n        \n            <div className='loginLandingPage'>\n            <CardGroup>\n                <Card className='landingCards landingCardLeft'></Card>\n                <Card className='landingCards landingCardRight'>\n                    <Card.Title className='landingTitle'>Plant Feedr</Card.Title>\n                    <p>Created to keep your plants alive</p>\n                    <div className='landingFormButtonContainer'>\n                  \n                            <Link className='plantFormLink landingButtons' to='/login'>Login</Link>\n                            <Link className='plantFormLink landingButtons' to='/register'>Sign Up</Link>\n                    \n                    </div>\n                </Card>\n                </CardGroup>\n            </div>\n        )\n    }\n}\n\nexport default Landing;","import React from 'react';\nimport '../index.css';\n\n\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport AddPlant from './plantFolder/AddPlant';\nimport EditPlant from './plantFolder/EditPlant';\nimport Register from './Register';\nimport Logout from './Logout';\nimport Landing from './Landing';\n\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from '../history';\n\n\n\nclass App extends React.Component{\n    render(){\n        return(\n            <Router history={history}>\n  \n                    \n                    <Switch>\n                    <Route path ='/login' exact component={Login}/>\n                    <Route path ='/' exact component={Landing}/>\n                    <Route path ='/register/' exact component ={Register}/>\n                    <Route component={Header} />\n                       \n                    </Switch>\n                    \n                        <Route path ='/dashboard' exact component={Dashboard}/>\n                        <Route path ='/add' exact component={AddPlant}/>\n                        <Route path ='/plant/:id' exact component={EditPlant}/>\n                        \n                        <Route path='/logout' exact component ={Logout} />\n                \n     \n            </Router>\n        )\n    }\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport plantReducer from './plantReducer';\nimport userReducer from './userReducer';\nimport loginErrorReducer from './loginErrorReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    plants: plantReducer,\n    users: userReducer,\n    error: loginErrorReducer\n});","import _ from 'lodash';\n\nexport default (state={}, action) =>{\n    switch(action.type){\n        case 'GET_PLANTS':\n            return {...state, ..._.mapKeys(action.payload, '_id')};\n        case 'CREATE_PLANT':\n            return {...state, [action.payload._id] : action.payload};\n        case 'GET_PLANT':\n            return {...state, [action.payload._id] : action.payload};    \n        case 'DELETE_PLANT':\n            return _.omit(state, action.payload);\n        case 'EDIT_PLANT':\n            return {...state, [action.payload._id] : action.payload};\n        case 'LOGOUT_USER':\n            return state={}\n        default:\n            return state;\n    }\n}","\nexport default (state={}, action) => {\n    switch (action.type){\n        case 'NEW_USER':\n            return  {...state, [action.payload._id]: action.payload};\n        case 'LOGIN_USER':\n            return {...state, [action.payload._id]: action.payload};\n        case 'LOGOUT_USER':\n            return state={};\n        default:\n            return state;\n\n    }\n}","\nexport default (state={}, action) =>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {...state, error: action.payload};\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n); \n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n    );\n\n"],"sourceRoot":""}