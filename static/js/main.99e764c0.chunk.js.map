{"version":3,"sources":["api/plants.js","api/users.js","history.js","actions/index.js","components/Logout.js","components/EditUserForm.js","components/EditUser.js","components/Header.js","components/plantFolder/PlantForm.js","components/plantFolder/EditPlant.js","components/plantFolder/GetPlants.js","components/plantFolder/AddPlant.js","components/Dashboard.js","components/LoginForm.js","components/Login.js","components/RegisterForm.js","components/Register.js","components/Landing.js","components/App.js","reducers/index.js","reducers/plantReducer.js","reducers/userReducer.js","reducers/loginErrorReducer.js","index.js"],"names":["axios","create","baseURL","process","createBrowserHistory","editPlant","id","formValues","token","_ref5","Object","asyncToGenerator","regenerator_default","a","mark","_callee5","dispatch","headers","response","wrap","_context5","prev","next","Authorization","concat","plants","patch","sent","type","payload","data","history","push","stop","_x6","apply","this","arguments","Logout","logout","_this","props","logoutUser","user","undefined","renderLogout","react_default","createElement","Card_default","className","onClick","hideLogOutModal","React","Component","connect","state","users","_ref9","_callee9","_context9","post","_x10","renderCustomForm","_ref","input","placeholder","_ref$meta","meta","touched","error","assign","reduxForm","form","validate","values","errors","email","test","name","Title","Body","Field","component","handleSubmit","onSubmit","Button_default","hideModal","deleteUser","EditUser","deleteButton","editUser","hideEditUserModal","components_EditUserForm","initialValues","_","pick","ownProps","_ref6","_callee6","_context6","_x7","_ref10","_callee10","_context10","delete","_id","_x11","Header","logOutModal","editUserModal","showLogOutModal","setState","showEditUserModal","renderButton","Navbar_default","variant","expand","Toggle","Collapse","Modal_default","show","components_Logout","components_EditUser","momentLocalizer","moment","renderDateTimePicker","_ref$input","onChange","value","showTime","DateTimePicker_default","format","time","Date","renderDropdownList","_ref2","valueField","textField","DropdownList_default","_ref3","_ref3$meta","sunType","length","water","isNaN","Number","lastwater","EditPlant","plantID","hideEditModal","getPlant","plantFolder_PlantForm","plant","_callee3","_context3","get","_x4","GetPlants","editModal","months","showEditModal","deletePlantHelper","deletePlant","getNextDate","nextDay","setDate","getDate","parseInt","day","month","getMonth","toString","formatLastWater","lastDay","changeLastWatered","todayObject","renderPlants","map","Col_default","md","lg","key","index_esm","sun","bind","assertThisInitialized","plantFolder_EditPlant","getPlants","Container_default","Row_default","noGutters","_callee2","_context2","_x3","_ref4","_callee4","_context4","_x5","AddPlant","createPlant","newPlant","_callee","getState","_context","t0","Error","_x","_x2","Dashboard","toggleModal","showModal","renderWelcome","plantFolder_AddPlant","plantFolder_GetPlants","password","renderError","Login","loginUser","components_LoginForm","_ref8","_callee8","_context8","console","log","_x9","Register","newUser","components_RegisterForm","_ref7","_callee7","_context7","_x8","Landing","CardGroup_default","react_router_dom","to","App","react_router","path","exact","combineReducers","formReducer","action","objectSpread","mapKeys","defineProperty","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.99e764c0.chunk.js","sourcesContent":["/*\n    Axios instance for plant API endpoint\n*/\n\nimport axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n})","/*\n    Axios instance for User API endpoint\n*/\n\nimport axios from 'axios';\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n})","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import plants from '../api/plants';\nimport users from '../api/users';\nimport history from '../history';\n\n/*\n    Plant Action Creators\n*/\n\n\n//Create new plant\nexport const createPlant = (formValues, token, hideModal) => {\n    return async (dispatch, getState) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        \n        try{\n        const response = await plants.post('/plant', formValues, {headers});\n        dispatch({ type: 'CREATE_PLANT', payload: response.data});\n        hideModal()\n\n        }catch(e){\n            throw new Error(e.response);\n            \n        }\n    };\n};\n\n\n//Get all plants\nexport const getPlants = (token) => {\n    return async (dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.get('/plant', {headers});\n        dispatch({ type: 'GET_PLANTS', payload: response.data})\n    }\n}\n\n//Get single Plant\nexport const getPlant = (id, token) => {\n    return async (dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.get(`/plant/${id}`, {headers});\n        dispatch({ type: 'GET_PLANT', payload: response.data})\n    }\n}\n\n//Delete Plant\nexport const deletePlant = (id, token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.delete(`/plant/${id}`, {headers});\n        dispatch({ type: 'DELETE_PLANT', payload: response.data._id});\n        \n    }\n}\n\n//Edit Plant\nexport const editPlant = (id, formValues, token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await plants.patch(`/plant/${id}`, formValues,{headers});\n        dispatch({ type: 'EDIT_PLANT', payload: response.data});\n        history.push('/plant/dashboard');\n    }\n}\n\n\n\n/*\n    User Action Creators\n*/\n\n\n//Edit Users\nexport const editUser = (formValues, token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await users.patch('/users/me', formValues,{headers});\n        dispatch({ type: 'EDIT_USER', payload: response.data});\n        history.push('/plant/dashboard');\n    }\n}\n\n//Create new user\nexport const newUser = (formValues) =>{\n    return async(dispatch) =>{\n        const response = await users.post('/users', formValues);\n        dispatch({ type: 'NEW_USER', payload: response.data});\n        history.push('/plant/dashboard');\n    }\n}\n\n//Login User\nexport const loginUser = (formValues) =>{\n    return async(dispatch) =>{\n        try{\n        const response = await users.post('/users/login', formValues);\n        dispatch({ type: 'LOGIN_USER', payload: response.data});\n        history.push('/plant/dashboard');\n        }catch(e){\n            console.log(e.response.data.error)\n            dispatch({ type: 'LOGIN_ERROR', payload: e.response.data.error});\n        }\n    }\n}\n\n//Logout User\nexport const logoutUser = (token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await users.post('/users/logout',null, {headers})\n        dispatch ({ type: 'LOGOUT_USER', payload: response.data});\n        history.push('/plant/');\n    }\n}\n\n//Delete User\nexport const deleteUser = (token) => {\n    return async(dispatch) => {\n        const headers = {\n            'Authorization' : `Bearer ${token}`\n        }\n        const response = await users.delete('/users/me', {headers});\n        dispatch({ type: 'DELETE_USER', payload: response.data._id});\n        history.push('/plant/')\n        \n    }\n}\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions';\n\nimport Card from 'react-bootstrap/Card';\nimport history from '../history';\n\nclass Logout extends React.Component{\n    \n    logout = () =>{\n        this.props.logoutUser(this.props.user.undefined.token)\n        history.push('/plant')\n    }\n    \n\n    renderLogout = () => {\n        return (\n            <Card className='loginCard'>\n                <h1 className='cardTitle'>Are you sure you want to logout?</h1>\n                <div className='loginFormButtonContainer'>\n                    <button className='loginFormButtons' onClick={this.logout}>Logout</button>\n                    <button className='loginFormButtons' onClick={()=>this.props.hideLogOutModal()}>Cancel</button>\n                </div>\n             </Card>    \n        )\n    }\n\n    render(){\n        return(\n            <div>\n                {this.renderLogout()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps, { logoutUser })(Logout)","import React from 'react';\n\nimport { Field, reduxForm  } from 'redux-form';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\n//Validate EditForm fields\nconst validate = values => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = <p className='loginFieldError'>Email is Required</p>\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = <p className='loginFieldError'>Invalid email address</p>\n    }\n    if (!values.name) {\n        errors.name = <p className='loginFieldError'>Name is Required</p>\n      } \n    return errors\n  }\n\n//Render Custom Redux-Form\nconst renderCustomForm = ({input, type, placeholder, meta:{touched, error}})=>{\n    return(\n        <div>\n        <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n        {touched && (error && <span>{error}</span>)}\n        </div>\n    )\n }\n\nconst EditUserForm = (props) => {\n    return(\n        <Card className='loginCard'>\n        <Card.Title className='cardTitle'>Edit Account</Card.Title>\n        <Card.Body>\n        <form >\n        <div>\n            <Field\n                name='name'\n                component={renderCustomForm}\n                type='text'\n                placeholder='NAME'\n                \n                \n            />\n        </div>  \n\n        <div> \n            <Field\n                name='email'\n                component={renderCustomForm}\n                type='text'\n                placeholder='EMAIL'   \n            />\n        </div>\n\n        <div className='userEditFormButtonContainer'>\n            <div>\n                <button \n                    className='editUserFormPrimary' \n                    onClick={props.handleSubmit(props.onSubmit)}>\n                    Submit\n                </button>\n                <Button \n                    className='editUserFormSecondary' \n                    onClick={()=>props.hideModal()}>\n                    Cancel\n                </Button>\n            </div>\n                <Button \n                    className='deleteUserButton' \n                    onClick={()=>props.deleteUser()}>\n                    Delete Account\n                </Button>  \n        </div>\n    \n        </form>\n        </Card.Body>\n        </Card> \n    );   \n}\n\nexport default reduxForm({\n    form: 'editUserForm',\n    validate\n})(EditUserForm);","import React from 'react';\n\nimport EditUserForm from './EditUserForm';\n\nimport { connect } from 'react-redux';\nimport { editUser, deleteUser } from '../actions';\n\nimport _ from 'lodash';\nimport history from '../history';\n\n\nclass EditUser extends React.Component{\n    \n    deleteButton = () =>{\n        this.props.deleteUser(this.props.user.undefined.token)\n        history.push('/plant')\n    }\n    \n    //onSubmit helper function to pass into editUserForm\n    onSubmit=(formValues)=>{\n        this.props.editUser(formValues,this.props.user.undefined.token)\n        this.props.hideEditUserModal()\n    }\n    \n    render(){\n        return(\n            <div>\n                <EditUserForm \n                    initialValues={_.pick(this.props.user.undefined.user, 'name','email')}\n                    onSubmit={this.onSubmit}\n                    hideModal={this.props.hideEditUserModal}\n                    deleteUser={this.deleteButton}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    return{\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps,{ editUser, deleteUser })(EditUser);","import React from 'react'\nimport Logout from './Logout';\n\nimport { connect } from 'react-redux';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Modal from 'react-bootstrap/Modal';\nimport EditUser from './EditUser'\n\nclass Header extends React.Component{  \n    state ={\n        logOutModal : false,\n        editUserModal : false\n    }\n    \n    //Toggle Logout Modal\n    showLogOutModal = () =>{\n        this.setState({\n            logOutModal : true\n        })\n    }\n\n    hideLogOutModal = () =>{\n        this.setState({\n            logOutModal : false\n        })\n    }\n\n    //Toggle EditForm Modal\n    showEditUserModal = () =>{\n        this.setState({\n            editUserModal : true\n        })\n    }\n\n    hideEditUserModal = () =>{\n        this.setState({\n            editUserModal : false\n        })\n    }    \n\n    //Nav buttons\n    renderButton = () =>{\n        return(\n            <div>\n                <button \n                    className='navBarLogout' \n                    onClick={this.showLogOutModal}>\n                    Logout\n                </button>\n                <button \n                    className='navBarLogout' \n                    onClick={this.showEditUserModal}>\n                    Edit Account\n                </button>\n            </div>        \n        )\n    }\n\n    //Render Navbar using React-Bootstrap Navbar\n    render(){\n        return(\n            <div>\n                <Navbar variant='dark' expand='defaultExpanded' className='navBar'>\n                    <Navbar.Toggle />                   \n                    <Navbar.Collapse className='justify-content-end'>\n                        {this.renderButton()}          \n                    </Navbar.Collapse>\n                </Navbar>\n\n                <Modal show={this.state.logOutModal}>\n                    <Logout hideLogOutModal={this.hideLogOutModal} />\n                </Modal>\n                <Modal show={this.state.editUserModal}>\n                    <EditUser hideEditUserModal={this.hideEditUserModal} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        user:state.users\n    }\n}\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n\nimport { Field, reduxForm  } from 'redux-form';\n\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button';\n\nimport moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport DropdownList from 'react-widgets/lib/DropdownList';\n\nimport 'react-widgets/dist/css/react-widgets.css'\n\nmomentLocalizer(moment)\n\n/*\n    Render react-widgets\n*/\n\nconst renderDateTimePicker = ({ input: { onChange,value }, showTime}) =>\n    <DateTimePicker\n        onChange={onChange}\n        format='DD MM YYYY'\n        time={showTime}\n        value={!value ? null : new Date(value)}\n    />\n\nconst renderDropdownList = ({input, data, valueField, textField }) => \n    <DropdownList {...input}\n        data={data}\n        onChange={input.onChange}\n    />\n\n\n//Render custom Redux-form \nconst renderCustomForm = ({input, type, placeholder, meta:{touched, error}})=>{\n    return(\n        <div>\n            <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n            {touched && (error && <span>{error}</span>)}\n        </div>\n    )\n }\n\n//Validate redux-form Fields\nconst validate = values => {\n    const errors = {}\n    if (!values.name) {\n        errors.name = <p className='loginFieldError'>Name Required</p>\n    }else if (values.name.length > 15) {\n        errors.name = <p className='loginFieldError'>Must be 15 characters or less</p>\n    }\n    if (!values.water) {\n        errors.water = <p className='loginFieldError'>Number of days required</p>\n      }else if (isNaN(Number(values.water))) {\n        errors.water = <p className='loginFieldError'>Must be a number</p>\n      } \n    if (!values.lastwater) {\n        errors.lastwater = <p className='loginFieldError'>Date Required</p>\n    }\n    return errors\n  }\n\n\nconst sunType = [\n    'Likes low light',\n    'Likes filtered light',\n    'Likes direct light'\n]\n\n\nconst PlantForm = (props) => {\n    const onSubmit = (formValues) =>{props.onSubmit(formValues)}\n        return(\n            <Card className='loginCard'>\n            <Card.Title className='cardTitle'>Plant Form</Card.Title>\n            <Card.Body>\n            <form onSubmit={props.handleSubmit(onSubmit)}>\n                <div>\n                    <label>Name of Plant:</label>\n                    <Field\n                        name='name'\n                        component={renderCustomForm}\n                        type='text'\n                        placeholder=\"'Pothos Neon'\"   \n                    />\n                </div>\n    \n                <div>\n                    <label>Type of Light:</label>\n                    <Field  \n                        name='sun'\n                        component={renderDropdownList}\n                        data={sunType}\n                        placeholder=\"'Likes direct sunlight'\"\n                    />\n                </div>\n                <div>\n                    <label>How many days between watering:</label>\n                    <Field  \n                        name='water'\n                        component={renderCustomForm}\n                        type='text'\n                        placeholder=\"'8'\"\n                    />\n                </div>\n                <div>\n                    <label>Last time plant was watered:</label>\n                        <Field \n                            name='lastwater'\n                            showTime={false}\n                            component={renderDateTimePicker}\n                        />\n                </div>\n\n                <div className='plantFormButtons'>\n                    <Button \n                        className='loginFormButtons' \n                        onClick={props.handleSubmit(props.onSubmit)}>\n                        Submit\n                    </Button>\n                    <Button \n                        className='loginFormButtons' \n                        onClick={()=>props.hideModal()}>\n                        Cancel\n                    </Button>\n                </div>\n            </form>\n            </Card.Body>\n            </Card> \n        );    \n}\n\nexport default reduxForm({\n    form: 'plantForm',\n    validate\n})(PlantForm);","import React from 'react';\nimport PlantForm from './PlantForm';\n\nimport { connect } from 'react-redux';\nimport { editPlant, getPlant } from '../../actions';\nimport _ from 'lodash';\n\n\nclass EditPlant extends React.Component{\n    \n    //On component mount, call get Plant to get single plant in state\n    componentDidMount(){\n        this.props.getPlant(this.props.plantID,this.props.user.undefined.token)\n    }\n\n    //onSubmit callback function passed in PlantForm \n    onSubmit=(formValues)=>{\n        this.props.editPlant(this.props.plantID,formValues,this.props.user.undefined.token)\n        this.props.hideEditModal()\n    }\n    \n    render(){\n        return(\n            <div>\n                <PlantForm \n                    initialValues={_.pick(this.props.plant, 'name','sun', 'water', 'lastwater')}\n                    onSubmit={this.onSubmit}\n                    hideModal={this.props.hideEditModal}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n    return{\n        plant: state.plants[ownProps.plantID],\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps,{ editPlant, getPlant})(EditPlant);","import React from 'react';\nimport EditPlant from './EditPlant';\n\nimport { editPlant } from '../../actions';\nimport { getPlants, deletePlant } from '../../actions/';\nimport { connect } from 'react-redux';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Modal from 'react-bootstrap/Modal';\n\nimport { FiSun, FiClock, FiCloudDrizzle } from 'react-icons/fi';\n\n\nclass GetPlants extends React.Component{\n   \n    //Setting state for showing edit Modal and Months\n    state = {\n        editModal: null,\n        months: [\"January\", \n                \"February\", \n                \"March\", \n                \"April\", \n                \"May\", \n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"]\n    }\n\n    //When component mounts get list of all plants\n    componentDidMount(){\n        this.props.getPlants(this.props.user.undefined.token)\n    }\n\n\n/*\n    Helper Functions\n*/\n\n\n    //Toggle for showing Edit Modal\n    showEditModal = (id) => {\n        this.setState({\n            editModal: id\n        })\n    }\n\n    hideEditModal = () => {\n        this.setState({\n            editModal: null\n        })\n    }\n\n    //calls deletePlant action Creator\n    deletePlantHelper=(id)=>{\n        this.props.deletePlant(id)\n    }\n\n  \n    //Helper function to calculate \n    //Next Date plant needs to be watered\n    getNextDate = (plant) => { \n        var nextDay = new Date(plant.lastwater);\n        nextDay.setDate(nextDay.getDate() + parseInt(plant.water));\n        var day = nextDay.getDate();\n        var month = nextDay.getMonth();\n        return this.state.months[month]  + ' ' + day.toString();\n    }   \n\n    formatLastWater = (plant) => {\n        var lastDay = new Date(plant.lastwater);\n        var day = lastDay.getDate();\n        var month = lastDay.getMonth();\n        return this.state.months[month] + ' ' + day.toString();\n    }\n\n    //Helper function for Water button\n    //Changes last watered date to Today\n    changeLastWatered = (plant) => {\n        var today = new Date()\n        var todayObject = {\n            'lastwater': today\n            }\n        this.props.editPlant(plant._id,todayObject,this.props.user.undefined.token)\n    }\n\n    //Map through plants and render \n    renderPlants = () =>{\n        return (\n            this.props.plants.map((plant)=>\n                <Col md={6} lg={4} className='getPlantIndividual' key={plant._id}>\n                    <Card className='getPlantsCards'>\n                        <Card.Header className='plantCardHeader'>\n                            <p className='plantCardHeaderTop'>{plant.name}</p>\n                            <p className='plantCardHeaderDays'>Next watering date:</p>\n                            <p className='plantCardHeaderBottom'>{this.getNextDate(plant)}</p>\n                            <button \n                                className='cardWaterButton'\n                                onClick={()=>this.changeLastWatered(plant)}>\n                                WATER\n                            </button>\n                        </Card.Header>\n                        <Card.Body className='plantCardBody'>\n                           <div className='cardIcons'>\n                                <div><FiSun /></div>\n                                <div><FiCloudDrizzle /></div>\n                                <div><FiClock /></div>\n                            </div>\n                            <div className='cardDetails'>\n                                <p>{plant.sun}</p>\n                                <p>Water every {plant.water} days</p>\n                                <p>Last watered: {this.formatLastWater(plant)} </p>\n                            </div>\n                        </Card.Body>\n                        <div className='plantCardButtonContainer'>\n                            <button className='plantCardButton' \n                                onClick={this.props.deletePlant.bind(this, plant._id, this.props.user.undefined.token)}   \n                                >Delete\n                            </button>\n                            <button className='plantCardButton'\n                                onClick={()=>this.showEditModal(plant._id)}\n                                >Edit\n                            </button>\n                            <Modal show={this.state.editModal === plant._id} >  \n                                <EditPlant plantID={plant._id} hideEditModal={this.hideEditModal}  />\n                            </Modal>\n                        </div>   \n                    </Card>\n                </Col>\n            )\n        )\n    }\n    \n    render(){\n        return(\n            <Container>\n                <Row className='getPlantsGroup' noGutters={true}>             \n                    {this.renderPlants()}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        plants: Object.values(state.plants),\n        user: (state.users)\n    }\n}\n\nexport default connect(mapStateToProps,{ getPlants, deletePlant, editPlant })(GetPlants);","import React from 'react';\nimport PlantForm from './PlantForm';\n\nimport { connect } from 'react-redux';\nimport { createPlant } from '../../actions';\n\n\nclass AddPlant extends React.Component{\n    \n    //Pass onSubmit action creator into PlantForm\n    onSubmit=(formValues,props)=>{\n            this.props.createPlant(formValues,this.props.user.undefined.token,this.props.hideModal) \n    }\n    \n    render(){\n        return(\n\n            //Render Plant Form to create newPlant\n            //Pass in onSubmit callback function to call action creator\n            //Pass in hideModal function from parent to PlantForm \n\n            <div>\n                <PlantForm \n                    onSubmit={this.onSubmit}\n                    hideModal={this.props.hideModal}\n                 />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        newPlant : (state.form),\n        user: (state.users)\n    }\n}\n\nexport default connect(mapStateToProps,{createPlant})(AddPlant);","import React from 'react';\nimport GetPlants from './plantFolder/GetPlants'\nimport { connect } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport AddPlant from './plantFolder/AddPlant';\n\nclass Dashboard extends React.Component{\n\n    state = {\n        toggleModal: false\n    }\n\n    //Toggle state to show and hide Modal\n    showModal = () =>{\n        this.setState({\n            toggleModal: true\n        })\n    }\n\n    hideModal = () =>{\n        this.setState({\n            toggleModal: false\n        })\n    }\n\n    //Render User Specific Greeting\n    renderWelcome = () =>{\n        return(\n            <div className='helloDash'>\n                <p>Hello</p>\n                <p className='helloDashName'>{this.props.user.undefined.user.name}</p>\n            </div>\n        )\n    }\n    \n    //Render Add Plant Button\n    renderButton = () => {\n        return(  \n            <button onClick={this.showModal} className='plantFormLink addPlantButton'>\n                <p className='addPlantText'>+</p>\n            </button> \n        ) \n    }\n\n    render(){\n        return(\n            <div className='dashboardBackground'>\n                <div>\n                    <div className='dashboardGroup'>\n                        {this.renderWelcome()}\n                        {this.renderButton()}\n                        <Modal show={this.state.toggleModal} >\n                            <AddPlant hideModal={this.hideModal} />\n                        </Modal>\n                    </div>\n                    <GetPlants />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n        user: state.users\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react';\n\nimport { Field, reduxForm  } from 'redux-form';\n\nimport Card from 'react-bootstrap/Card'\n\n//Validate Login Credentials\nconst validate = values => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = <p className='loginFieldError'>Required</p>\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = <p className='loginFieldError'>Invalid email address</p>\n    }\n    if (!values.password) {\n      errors.password = <p className='loginFieldError'>Required</p>\n    } \n    return errors\n  }\n\nconst renderCustomForm = ({input, type, placeholder, meta: {touched, error}})=>{\n    return(\n        <div>\n            <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n            {touched && (error && <span>{error}</span>)}\n        </div>   \n    )\n }\n\n\nconst LoginForm = (props) => {\n    return(\n        <Card className='loginCard'>\n        <Card.Title className='cardTitle'>Login</Card.Title>\n        <Card.Body>\n        <form >\n            <div>\n                <Field\n                    name='email'\n                    component={renderCustomForm}\n                    type='text'\n                    placeholder='EMAIL'\n                />\n            </div>\n\n            <div>  \n                <Field  \n                    name='password'\n                    component={renderCustomForm}\n                    type='password'\n                    placeholder='PASSWORD'\n                />\n            </div>\n            {props.renderError()}\n            <div className='loginFormButtonContainer'>\n                <button className='loginFormButtons' type='submit' onClick={props.handleSubmit(props.onSubmit)}>\n                    Login\n                </button>\n            </div>\n        </form>\n        </Card.Body>\n        </Card> \n    ); \n}\n\nexport default reduxForm({\n    form: 'loginForm',\n    validate\n})(LoginForm);","import React from 'react'\nimport LoginForm from './LoginForm';\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions';\n\n\n//Render Login Page\nclass Login extends React.Component{\n    \n    onSubmit = (formValues) =>{\n        return (\n            this.props.loginUser(formValues)\n        )\n    }\n    \n    renderError = () =>{\n        if(this.props.error.error){\n            return <p className='loginFieldError'>{this.props.error.error}</p>\n        }\n    }\n\n    render(){\n        return(\n            <div className='loginLandingPage'>\n                <LoginForm onSubmit={this.onSubmit} renderError={this.renderError}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        error: state.error\n    }\n}\n\nexport default connect(mapStateToProps, { loginUser })(Login);","import React from 'react';\n\nimport { Field, reduxForm  } from 'redux-form';\n\nimport Card from 'react-bootstrap/Card'\n\n//Validate Register Field\nconst validate = values => {\n    const errors = {}\n    if (!values.email) {\n      errors.email = <p className='loginFieldError'>Email is Required</p>\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = <p className='loginFieldError'>Invalid email address</p>\n    }\n    if (!values.password) {\n      errors.password = <p className='loginFieldError'>Password is Required</p>\n    } \n    if (!values.name) {\n        errors.name = <p className='loginFieldError'>Name is Required</p>\n      } \n    return errors\n  }\n\nconst renderCustomForm = ({input, type, placeholder, meta:{touched, error}})=>{\n    return(\n        <div>\n        <input {...input} placeholder={placeholder} type={type} className='loginField'/>\n        {touched && (error && <span>{error}</span>)}\n        </div>\n    )\n }\n\nconst RegisterForm = (props) => {\n        return(\n            <Card className='loginCard'>\n            <Card.Title className='cardTitle'>Sign Up</Card.Title>\n            <Card.Body>\n            <form >\n            <div>\n                <Field\n                    name='name'\n                    component={renderCustomForm}\n                    type='text'\n                    placeholder='NAME' \n                />\n            </div>  \n            <div>\n                <Field\n                    name='email'\n                    component={renderCustomForm}\n                    type='text'\n                    placeholder='EMAIL'\n                />\n            </div>\n    \n            <div>  \n                <Field  \n                    name='password'\n                    component={renderCustomForm}\n                    type='password'\n                    placeholder='PASSWORD'   \n                />\n            </div>\n                <div className='loginFormButtonContainer'>\n                    <button \n                        className='loginFormButtons plantFormButtons' \n                        onClick={props.handleSubmit(props.onSubmit)} \n                        variant='primary'>\n                        Sign Up\n                    </button>\n                </div>\n            </form>\n            </Card.Body>\n            </Card> \n        );   \n}\n\nexport default reduxForm({\n    form: 'registerForm',\n    validate\n})(RegisterForm);","import React from 'react';\nimport RegisterForm from './RegisterForm';\nimport { connect } from 'react-redux';\nimport { newUser } from '../actions';\n\nclass Register extends React.Component{\n    \n    //Pass in onSubmit helper function in RegisterForm\n    onSubmit = (formValues) =>{\n        return(\n            this.props.newUser(formValues)\n        )\n    }\n    \n    render(){\n        return(\n            <div className='loginLandingPage'>\n                <RegisterForm onSubmit={this.onSubmit} />\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { newUser })(Register);","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport Card from 'react-bootstrap/Card';\nimport CardGroup from 'react-bootstrap/CardGroup';\n\n//Render Landing Page\nclass Landing extends React.Component{\n    render(){\n        return(\n            <div className='loginLandingPage'>\n            <CardGroup>\n                <Card className='landingCards landingCardLeft'></Card>\n                <Card className='landingCards landingCardRight'>\n                    <Card.Title className='landingTitle'>Plant Feedr</Card.Title>\n                    <p>Created to keep your plants alive</p>\n                    <div className='landingFormButtonContainer'>\n                        <Link className='plantFormLink landingButtons' to='/plant/login'>Login</Link>\n                        <Link className='plantFormLink landingButtons' to='/plant/register'>Sign Up</Link>\n                    </div>\n                </Card>\n            </CardGroup>\n            </div>\n        )\n    }\n}\n\nexport default Landing;","import React from 'react';\nimport '../index.css';\n\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Login from './Login';\nimport AddPlant from './plantFolder/AddPlant';\nimport EditPlant from './plantFolder/EditPlant';\nimport Register from './Register';\nimport Logout from './Logout';\nimport Landing from './Landing';\n\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from '../history';\n\n\nclass App extends React.Component{\n    render(){\n        return(\n            <Router history={history}>\n                <Switch>\n                    <Route path ='/plant/login' exact component={Login}/>\n                    <Route path ='/plant/' exact component={Landing}/>\n                    <Route path ='/plant/register/' exact component ={Register}/>\n                    <Route component={Header} />   \n                </Switch>\n                    <Route path ='/plant/dashboard' exact component={Dashboard}/>\n                    <Route path ='/plant/add' exact component={AddPlant}/>\n                    <Route path ='/plant/plant/:id' exact component={EditPlant}/>\n                    <Route path='/plant/logout' exact component ={Logout} />\n            </Router>\n        )\n    }\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport plantReducer from './plantReducer';\nimport userReducer from './userReducer';\nimport loginErrorReducer from './loginErrorReducer';\n\nexport default combineReducers({\n    form: formReducer,\n    plants: plantReducer,\n    users: userReducer,\n    error: loginErrorReducer\n});","/*\n    Update Plant Store State\n*/\n\nimport _ from 'lodash';\n\nexport default (state={}, action) =>{\n    switch(action.type){\n        case 'GET_PLANTS':\n            return {...state, ..._.mapKeys(action.payload, '_id')};\n        case 'CREATE_PLANT':\n            return {...state, [action.payload._id] : action.payload};\n        case 'GET_PLANT':\n            return {...state, [action.payload._id] : action.payload};    \n        case 'DELETE_PLANT':\n            return _.omit(state, action.payload);\n        case 'EDIT_PLANT':\n            return {...state, [action.payload._id] : action.payload};\n        case 'LOGOUT_USER':\n            return state={}\n        default:\n            return state;\n    }\n}","/*\n    Update User Store State\n*/\n\nexport default (state={}, action) => {\n    switch (action.type){\n        case 'NEW_USER':\n            return  {...state, [action.payload._id]: action.payload};\n        case 'LOGIN_USER':\n            return {...state, [action.payload._id]: action.payload};\n        case 'EDIT_USER':\n            return {...state, undefined:{...state.undefined, user: action.payload}};\n        case 'LOGOUT_USER':\n            return state={};\n        case 'DELETE_USER':\n            return state={}\n        default:\n            return state;\n\n    }\n}","/*\n    State for rendering Login Error\n*/\n\n\nexport default (state={}, action) =>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {...state, error: action.payload};\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\n//Set up Redux store\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n); \n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n    );\n\n"],"sourceRoot":""}